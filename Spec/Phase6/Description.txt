In Phase 6, I would like to introduce Groups. A way of representing organisational hierarchy and grouping so that OKRTs can be shared among groups and be made visible to all relevant group members.

Any user can start (Create a new group). A Group can have a parent group. A group should have a type (Organisation,Department,Team,Chapter, Squad,Tribe,Group). Group must have a unique name and a thumbnail image that will represent the group when displayed as a card in the UI.

GROUP Table
id
name
type
parent_group_id
thumbnail_url


There is a Many-to-Many relationship between User table and Group table. 
The mapping table is User_Group

USER_GROUP table
user_id
group_id
is_admin (this is true or false, if true, this particular user is an admin of the group who can add users to the group)

The user who creates a new group will implicitly become an admin of that group. If a user belongs to a group, that user can extend from that group and create child groups.

We will now need a separate table to save Sharing details First, the visibility field already exist on teh OKRT table, this needs to be saved via existing OKRT update API. Then the list of groups to which this Objective is shared must be saved in a separate DB table which will hold OKRT id and Group id mappings. In a future phase I will need teh ability to she re with individuals by giving a list of usernames (email). Lets keep provision for that requirement now. 

SAHRE table

okrt_id
group_or_user_id
share_type (G-group or U-user)

Need to create new API to perform CRUD operations on Groups and UI to manage groups.

Group Management UI
This can be accessed via Groups menu option. The menu link must open the hierarchical tree structure all the way from the top most parent node to which the current users group belongs to, to the bottom most leaf group. The group node will be visualised in the UI by a narrow rectangular shape. At the left side of the rectangle there will be a 60px by 60px thumb nail image (corners chamfered) to the right of the image display group name vertically centred, left aligned within the rectangle. Under the name, still towards the right side of the thumb nail, display the number of OKRTs shared by this group (count records from SHARED table with this groups group id). Further to the right of the name and count text, there will be a down ward pointing chevron. When clicked on it, the rectangle can expand showing list of objectives each objective prefixed by <GrTrophy /> icon, under the objective name show a progress bar at the end of with progress % will be displayed as a number.  After objectives, a horizontal divider and list of members with admins marked with special prefix icon <RiAdminLine /> from react-icons (already installed). Use <FaRegUser /> for n non admin users. 



	 

Under the Group menu option, Add a new child menu option “+ Add Group”.





Once we have the grouping DB and API setup, we can move on to UI. There is one change to existing Objective UI components. At the moment there is a DB field called “visibility” in the OKRT table. This field needs to be modified so that there can only be two possible values 1. Private 2. Shared (remove organisation, team options). Also remove this drop down from Objective create/update form. Going forward there will be a new modal popup to share an objective with one or more groups and also one or more selected individuals. The first field on this modal should be a sliding switch to switch from Private to Shared. After that the two fields below should get enabled. The first field is a drop down list of all drop names in alphabetical order. Next to the drop down should be a Add button, once the add button is clicked, the names of the selected group will appear in a text area bellow comma separated. Finally there will be be a Save button to save the sharing settings. Once saved, the objective becomes visible as a shared goal(Shared Goals) to the chosen Groups users and to all users below the group hierarchy. For example, if a user shares a Objective in top most group, that objective is visible to all groups in the organisation.

I would first like to create the new database tables.
Create the new API endpoints necessary to render the above described UIs.
Generate the new UIs, refer to the prototype implementation on how to implement the Group view components in the following file: Spec/Phase6/groups_hierarchy_expanded_card_react_tailwind-2.jsx