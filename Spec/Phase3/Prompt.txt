We are developing a 90 days (OKRT) goal setting app. We are develping this in phases.
In the third phase we will introduce the OKRT UI to add, view, edit OKRTs, together with DataBase table OKRT and API endpoints to create,read,update OKRTs.
The table OKRT will be used to hold Objectives, KeyResults and Tasks.

Here is the OKRT table description
| Column                   | Type      | Notes                                                           |
| ------------------------ | --------- | --------------------------------------------------------------- |
| **id**                   | TEXT (PK) | Unique ID for this record                                       |
| **type**                 | TEXT      | `'O'` (Objective) \| `'K'` (Key Result) \| `'T'` (Task)         |
| **owner\_id**            | TEXT      | FK → `users.id` (creator)                                       |
| **parent\_id**           | TEXT      | FK → another OKRT.id (parent O or K)                            |
| **title**                | TEXT      | Short name for lists/cards (used only for objectives))                                     |
| **description**          | TEXT      | Detailed explanation                                            |
| **progress**             | REAL      | 0–100 percentage                                                |
| **status**               | TEXT      | `'D'`=Draft \| `'A'`=Active \| `'C'`=Complete                    |
| **area**                 | TEXT      | e.g., `Life`, `Work`, `Health`, `Finance`                       |
| **cycle\_qtr**           | TEXT      | e.g., `2025-Q3`                                                 |                                                       |
| **created\_at**          | TEXT      | Default `datetime('now')`                                       |
| **updated\_at**          | TEXT      | Updated on changes                                              |
| **order\_index**         | INTEGER   | To control ordering inside a parent                             |
| **visibility**           | TEXT      | `'private'` \| `'team'` \| `'org'`                              |
| **objective\_kind**      | TEXT      | `'committed'` \| `'stretch'` (O only)                           |
| **kr\_target\_number**   | REAL      | **NOT NULL** if type=`'K'`                                      |
| **kr\_unit**             | TEXT      | `%`, `$`, `count`, `hrs`, etc. (K only)                         |
| **kr\_baseline\_number** | REAL      | Optional (K only)                                               |
| **weight**               | REAL      | Default `1.0` (K and T only)                                          |
| **task\_status**         | TEXT      | `'todo'` \| `'in_progress'` \| `'done'` \| `'blocked'` (T only) |
| **due\_date**            | DATE      | Date-only (T only)                                              |
| **recurrence\_json**     | TEXT      | Optional habit pattern (T only)                                 |
| **blocked\_by**          | TEXT      | Nullable FK to another task.id (T only)                         |


Special Note for API design: At some point in a future phase we will introduce the AI Coach.
The AI Coach is similar to ChatGPT chat interface. User can type in any text prompt 
and the Coach will help the user to acomplish what the user wants to do with the app or with the goals.
For example, the user may type in "I want to set a goal for finantial independance but not sure how to break in to KRs and Tasks".
At that pont, AI Coach will come up with suggestions for Objective (Title and Description), then go on to suggest KRs and Tasks.
AI coach will display the suggestions accompanies with a "Accept" button. If the User accepts the suggestion, that button action must be
wired to trigger the API call that inserts Objective in to DB (or KR, Task). So when you create the API, be mindful that API endpoints could be called by dynamic UI action buttons.


I am going to insert my idea of how to visually represent OKRTs in the UI. These sketches can be found in the Phase3/UI folder.
Have a look at those sketches. Its a hierachical structure (indented). Each type will have a unique icon infront. Objective - Trophy, KR - Golf flag pole, Task - Golf stroke
Note for React: Each OKRT must have a unique UUID (primary key) and the URL must have this UUID. The OKRTs if not visbility private, can be shared for other to see and comment (we will do the comment function in a latter phase)
When other.

Modal Edit popups for each record and associated editable attributes:
Each record (the objective, KRs or tasks) can be opened for edit along with their associated parameters like for example weight for KR/Task or visibility for objective. 
The edit UIs must be compact rectangular popups with Close and Save button actions for human user to edit and save or close the modal. 




